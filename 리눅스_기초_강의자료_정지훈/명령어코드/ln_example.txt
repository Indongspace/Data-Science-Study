# <---------------------------------->
# 하드링크
$ cp /etc/crontab file1
$ ls 
file1

$ ln file1 file2                 <- 하드 링크 file2 만들기
$ ls 
file1 file2                      <- file2가 만들어짐

# <---------------------------------->
# 하드 링크 파일에 접근하기
$ cat file2
...(file1의 내용이 출력됨)...

# <---------------------------------->
# 하드 링크 삭제하기
$ rm file1                       <- file1 삭제하기
$ ls
file2                            <- 하드 링크로 만든 다른 파일은 남아 있음

$ cat file2
...(file1의 내용이 출력됨)...     <- 파일 자체는 모든 하드 링크가 없어져야 삭제됨

$ rm file2                       <- file2 삭제하기
$ ls 
$                                <- 모든 하드 링크가 없어져서 파일의 실체도 없어짐


# <---------------------------------->
# 심볼릭 링크
# 디렉터리는 하드 링크할 수 없으며, 하드 링크는 서로 다른 리스크에 걸쳐서 만들 수 없는 제한이 있음
# 그런데 심볼릭 링크는 이런 제한이 없어 더 많이 사용됨
$ cp /etc/crontab file1
$ ln -s file1 file2
$ ls -l                          <- ls 명령어에 -l 옵션 지정하면 심볼릭 링크 여부 확인, 어떤 파일에 연결되었는지 화살표(->)로 표시됨
total 4
-rw-r--r-- 1 user user 1136 May 18 04:21 file1
lrwxrwxrwx 1 user user    5 May 18 04:21 file2 -> file1

$ 심볼릭 링크를 지정하여 명령어 실행
$ cat file2 
...(file1의 내용이 출력됨)...

# <---------------------------------->
# 심볼릭 링크 삭제하기
# 심볼릭 링크는 rm 명령어로 지울 수 있음, 이 때 원본에는 어떠한 영향도 주지 않는다. 
$ rm file2                      <- 심볼릭 링크 file2 삭제하기
$ ls
file1                           <- 원본 파일만 남게 됨


# <---------------------------------->
# 링크가 깨진 심볼릭 링크
$ ln -s file1 file2
$ ls
-rw-r--r-- 1 user user 1136 May 18 04:21 file1
$ cat file2
cat: file2: No such file or directory

# <---------------------------------->
# 링크가 유용한 경우
# 긴 경로명을 일일이 입력하지 않아도 쉽게 해당 경로에 접근할 수 있음
# 예시
$ ln -s local/work/code/project/source source
$ cd source     <- 긴 경로명에 쉽게 이동 가능






